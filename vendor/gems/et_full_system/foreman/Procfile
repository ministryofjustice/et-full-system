traefik: bash --login -c "traefik --file.filename=${FOREMAN_PATH}/traefik.toml"
et1_web:  bash --login -c "cd ${FS_ROOT_PATH} && bundle exec et_full_system local wait_for_support && bundle exec et_full_system local update_service_url et1 http://localhost:${PORT} && cd systems/et1 && env $(cat ${FOREMAN_PATH}/et1.env | grep -v "#" | xargs) ./run.sh"
et1_sidekiq: bash --login -c "cd ${FS_ROOT_PATH} && bundle exec et_full_system local wait_for_support && cd systems/et1  && env $(cat ${FOREMAN_PATH}/et1.env | grep -v "#" | xargs) ./run_sidekiq.sh"
et3_web:  bash --login -c "cd ${FS_ROOT_PATH} && bundle exec et_full_system local wait_for_support && bundle exec et_full_system local update_service_url et3 http://localhost:${PORT} && cd systems/et3 && env $(cat ${FOREMAN_PATH}/et3.env | grep -v "#" | xargs) ./run.sh"
mail_web: bash --login -c "source ./mailhog.env && mailhog"
api_web: bash --login -c "cd ${FS_ROOT_PATH} && bundle exec et_full_system local wait_for_support && bundle exec et_full_system local update_service_url api http://localhost:${PORT} && cd systems/api && env $(cat ${FOREMAN_PATH}/et_api.env | grep -v "#" | xargs) ./run.sh"
api_sidekiq: bash --login -c "cd ${FS_ROOT_PATH} && bundle exec et_full_system local wait_for_support && cd systems/api && env $(cat ${FOREMAN_PATH}/et_api.env | grep -v "#" | xargs) ./run_sidekiq.sh"
admin_web: bash --login -c "cd ${FS_ROOT_PATH} && bundle exec et_full_system local wait_for_support && bundle exec et_full_system local update_service_url admin http://localhost:${PORT} && cd systems/admin && env $(cat ${FOREMAN_PATH}/et_admin.env | grep -v "#" | xargs) ./run.sh"
atos_api_web: bash --login -c "cd ${FS_ROOT_PATH} && bundle exec et_full_system local wait_for_support && bundle exec et_full_system local update_service_url atos_api http://localhost:${PORT} && cd systems/atos && env $(cat ${FOREMAN_PATH}/et_atos.env | grep -v "#" | xargs) ./run.sh"
s3_web: bash --login -c "env $(cat ${FOREMAN_PATH}/minio.env | grep -v "#" | xargs) minio server /home/app/minio_data"
azure_blob_web: bash --login -c "azurite -l /home/app/azure_storage_data"
fake_acas_web: bash --login -c "cd ${FS_ROOT_PATH} && bundle exec et_full_system local wait_for_support && bundle exec et_full_system local update_service_url fake_acas http://localhost:${PORT} && /usr/local/rvm/bin/rvm use && bundle exec et_fake_acas_server --port=$PORT --threads=1:5"
