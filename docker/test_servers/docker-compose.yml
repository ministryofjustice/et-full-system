version: '3'
services:
  et1:
    build:
      context: ../../systems/et1
    links:
      - et1_db
      - et1_redis
      - smtp
      - et_api
      - et_admin
      - s3_mock
    ports:
      - "${ET1_PORT:-0}:8080"
    environment:
      RAILS_ENV: local
      BUNDLE_EXCLUDE: ''
      DB_HOST: et1_db
      DB_USERNAME: postgres
      DB_NAME: et1db
      WEB_CONCURRENCY: 4
      ASSET_HOST: anything
      HTTP_OPEN_TIMEOUT_S: 15
      HTTP_READ_TIMEOUT_S: 15
      REDIS_URL: redis://et1_redis:6379
      SECRET_KEY_BASE: dsjeflsdshewje23q896edc7dsufhsekjh4321ueirdasy6890
      SMTP_HOSTNAME: smtp
      SMTP_PORT: 1025
      JADU_API: ${JADU_API:-http://et_api:8080/api/v1/}
      AWS_ACCESS_KEY_ID: accessKey1
      AWS_SECRET_ACCESS_KEY: verySecretKey1
      S3_UPLOAD_BUCKET: 'et1bucket'
      AWS_REGION: 'us-east-1'
      AWS_ENDPOINT: 'http://s3.docker.test:8000'
      AWS_S3_FORCE_PATH_STYLE: 'true'

    volumes:
      - ../../systems/et1:/usr/src/app
      - ./Procfile:/usr/src/app/Procfile
      - ./wait-for-it:/usr/local/bin/wait-for-it
    command: bash -c "gem install foreman; bundle; npm install; bundle exec rake db:create; bundle exec rake db:migrate; bundle exec rake assets:precompile; foreman start"
    networks:
      - et_full_system
  et1_redis:
    image: redis
    ports:
      - 6379
    networks:
      - et_full_system
  et1_db:
    image: postgres:9.3.5
    networks:
      - et_full_system
  etapi_db:
    image: postgres:9.3.5
    ports:
      - "${ETAPI_DB_PORT:-0}:5432"
    networks:
      - et_full_system
  etapi_redis:
    image: redis
    ports:
      - "${ETAPI_REDIS_PORT:-0}:6379"
    networks:
      - et_full_system
  smtp:
    image: mailhog/mailhog:latest
    networks:
      - et_full_system
    ports:
      - "8025:8025"
    logging:
        driver: 'none'  # disable saving logs
  et_api:
    build:
      context: ../../systems/api
    environment:
      RAILS_ENV: production
      WEB_CONCURRENCY: 4
      SECRET_KEY_BASE: sdlkjewfkjhfviuhduihenrjk435r89esfd7cv983qh2n4r3q27yh4u5rtfg
      DB_HOST: etapi_db
      DB_NAME: et_jadu
      REDIS_HOST: etapi_redis
      REDIS_DATABASE: 1
      BUNDLE_EXCLUDE: ''
      AWS_ACCESS_KEY_ID: accessKey1
      AWS_SECRET_ACCESS_KEY: verySecretKey1
      AWS_REGION: 'us-east-1'
      S3_UPLOAD_BUCKET: 'etapibucket'
      AWS_ENDPOINT: 'http://s3.docker.test:8000'
      AWS_S3_FORCE_PATH_STYLE: 'true'
    command: bash -c "gem install foreman && bundle && bundle exec rails db:create db:migrate db:seed && foreman start"
    networks:
      - et_full_system
    volumes:
      - ../../systems/api:/usr/src/app
      - ./wait-for-it:/usr/local/bin/wait-for-it
    ports:
      - "${ETAPI_PORT:-0}:8080"
    links:
      - etapi_db
      - etapi_redis
      - s3_mock
  et_admin:
    build:
      context: ../../systems/admin
    environment:
      RAILS_ENV: production
      WEB_CONCURRENCY: 4
      SECRET_KEY_BASE: sdlkjewfkjhfviuhduihenrjk435r89esfd7cv983qh2n4r3q27yh4u5rtfg
      DEVISE_SECRET_KEY: JK3N45KH56743JN25J1B5H43B24H35BJ6575KN21NRNKFASDF89DU23I4NK5TGKFD
      ATOS_API_URL: "http://et_api:8080/atos_api"
      DB_HOST: etapi_db
      DB_NAME: et_jadu
      REDIS_HOST: etapi_redis
      REDIS_DATABASE: 1
      BUNDLE_EXCLUDE: ''
      RAILS_SERVE_STATIC_FILES: 'true'
      SEED_EXAMPLE_USERS: 'true'
      AWS_ACCESS_KEY_ID: accessKey1
      AWS_SECRET_ACCESS_KEY: verySecretKey1
      S3_UPLOAD_BUCKET: 'etapibucket'
      AWS_REGION: 'us-east-1'
      AWS_ENDPOINT: 'http://s3.docker.test:8000'
      AWS_S3_FORCE_PATH_STYLE: 'true'
    networks:
      - et_full_system
    volumes:
      - ../../systems/admin:/usr/src/app
      - ./wait-for-it:/usr/local/bin/wait-for-it
    links:
      - etapi_db
      - etapi_redis
      - et_api
      - s3_mock
    ports:
      - "${ET_ADMIN_PORT:-0}:8080"
    command: bash -c "wait-for-it et_api:8080 -t 300 && bundle && bundle exec rails db:seed assets:precompile && bundle exec unicorn -p 8080 -c ./config/unicorn.rb -E production"
  s3_mock:
    image: scality/s3server
    networks:
      et_full_system:
        aliases:
          - "s3.docker.test"
    ports:
      - "${S3_PORT:-0}:8000"
networks:
  et_full_system:
